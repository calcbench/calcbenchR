% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xbr_lcontext.R
\docType{class}
\name{XBRLcontext}
\alias{XBRLcontext}
\title{XBRLcontext}
\format{
An \code{R6Class} generator object
}
\description{
XBRLcontext Class

XBRLcontext Class
}
\details{
Create a new XBRLcontext
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{context_id}}{integer \link{optional}}

\item{\code{accession_id}}{integer \link{optional}}

\item{\code{period_start}}{character \link{optional}}

\item{\code{period_end}}{character \link{optional}}

\item{\code{period_instant}}{character \link{optional}}

\item{\code{specifies_dimensions}}{character \link{optional}}

\item{\code{context_xml_id}}{character \link{optional}}

\item{\code{entity_scheme}}{character \link{optional}}

\item{\code{entity_id}}{integer \link{optional}}

\item{\code{fiscal_year}}{integer \link{optional}}

\item{\code{fiscal_period}}{character \link{optional}}

\item{\code{context_hash}}{character \link{optional}}

\item{\code{is_primary}}{character \link{optional}}

\item{\code{dimension_hash}}{character \link{optional}}

\item{\code{calendar_year}}{integer \link{optional}}

\item{\code{calendar_period}}{character \link{optional}}

\item{\code{calendar_start_offset}}{numeric \link{optional}}

\item{\code{calendar_end_offset}}{numeric \link{optional}}

\item{\code{calendar_period_size_diff_percentage}}{numeric \link{optional}}

\item{\code{calendar_period_cum}}{character \link{optional}}

\item{\code{fiscalPeriodEndString}}{character \link{optional}}

\item{\code{successor}}{character \link{optional}}

\item{\code{predecessor}}{character \link{optional}}

\item{\code{isMostCurrent}}{character \link{optional}}

\item{\code{compareToColumn}}{integer \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-XBRLcontext-new}{\code{XBRLcontext$new()}}
\item \href{#method-XBRLcontext-toJSON}{\code{XBRLcontext$toJSON()}}
\item \href{#method-XBRLcontext-fromJSON}{\code{XBRLcontext$fromJSON()}}
\item \href{#method-XBRLcontext-toJSONString}{\code{XBRLcontext$toJSONString()}}
\item \href{#method-XBRLcontext-fromJSONString}{\code{XBRLcontext$fromJSONString()}}
\item \href{#method-XBRLcontext-validateJSON}{\code{XBRLcontext$validateJSON()}}
\item \href{#method-XBRLcontext-toString}{\code{XBRLcontext$toString()}}
\item \href{#method-XBRLcontext-isValid}{\code{XBRLcontext$isValid()}}
\item \href{#method-XBRLcontext-getInvalidFields}{\code{XBRLcontext$getInvalidFields()}}
\item \href{#method-XBRLcontext-print}{\code{XBRLcontext$print()}}
\item \href{#method-XBRLcontext-clone}{\code{XBRLcontext$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-new"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new XBRLcontext class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$new(
  context_id = NULL,
  accession_id = NULL,
  period_start = NULL,
  period_end = NULL,
  period_instant = NULL,
  specifies_dimensions = NULL,
  context_xml_id = NULL,
  entity_scheme = NULL,
  entity_id = NULL,
  fiscal_year = NULL,
  fiscal_period = NULL,
  context_hash = NULL,
  is_primary = NULL,
  dimension_hash = NULL,
  calendar_year = NULL,
  calendar_period = NULL,
  calendar_start_offset = NULL,
  calendar_end_offset = NULL,
  calendar_period_size_diff_percentage = NULL,
  calendar_period_cum = NULL,
  fiscalPeriodEndString = NULL,
  successor = NULL,
  predecessor = NULL,
  isMostCurrent = NULL,
  compareToColumn = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{context_id}}{context_id}

\item{\code{accession_id}}{accession_id}

\item{\code{period_start}}{period_start}

\item{\code{period_end}}{period_end}

\item{\code{period_instant}}{period_instant}

\item{\code{specifies_dimensions}}{specifies_dimensions}

\item{\code{context_xml_id}}{context_xml_id}

\item{\code{entity_scheme}}{entity_scheme}

\item{\code{entity_id}}{entity_id}

\item{\code{fiscal_year}}{fiscal_year}

\item{\code{fiscal_period}}{fiscal_period}

\item{\code{context_hash}}{context_hash}

\item{\code{is_primary}}{is_primary}

\item{\code{dimension_hash}}{dimension_hash}

\item{\code{calendar_year}}{calendar_year}

\item{\code{calendar_period}}{calendar_period}

\item{\code{calendar_start_offset}}{calendar_start_offset}

\item{\code{calendar_end_offset}}{calendar_end_offset}

\item{\code{calendar_period_size_diff_percentage}}{calendar_period_size_diff_percentage}

\item{\code{calendar_period_cum}}{calendar_period_cum}

\item{\code{fiscalPeriodEndString}}{fiscalPeriodEndString}

\item{\code{successor}}{successor}

\item{\code{predecessor}}{predecessor}

\item{\code{isMostCurrent}}{isMostCurrent}

\item{\code{compareToColumn}}{compareToColumn}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
XBRLcontext in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of XBRLcontext
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of XBRLcontext
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
XBRLcontext in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of XBRLcontext
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of XBRLcontext
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to XBRLcontext and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-toString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of XBRLcontext
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-print"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcontext-clone"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcontext-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcontext$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
