% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/face_statements_api.R
\docType{class}
\name{FaceStatementsApi}
\alias{FaceStatementsApi}
\title{FaceStatements operations}
\format{
An \code{R6Class} generator object
}
\description{
FaceStatementsApi
}
\details{
Calcbench API

No description provided (generated by Openapi Generator https://github.com/calcbenchRtools/calcbenchR-generator)

The version of the OpenAPI document: v1
Generated by: https://calcbenchR-generator.tech
}
\section{Methods}{

\describe{
\strong{ FaceStatementsGetStatementExteneral } \emph{ As-reported face statments, income, balance, statement of cash flows, etc... }
This is data behind the calcbench <a href=\"www.calcbench.com/detail\">Company-In-Detail page\if{html}{\out{</a>}}.  Formerly known as api/asReported

\itemize{
\item \emph{ @param } company_identifier character
\item \emph{ @param } statement_type character
\item \emph{ @param } period_type character
\item \emph{ @param } all_periods character
\item \emph{ @param } descending_dates character
\item \emph{ @param } end_date character
\item \emph{ @param } accession_id integer
\item \emph{ @param } point_in_time character
\item \emph{ @param } network_id integer
\item \emph{ @param } for_display character
\item \emph{ @param } currency Enum < \link{USD, AUD, BRL, CAD, CHF, CNY, DKK, EUR, GBP, HKD, INR, JPY, KRW, LKR, MXN, MYR, NOK, NZD, SEK, SGD, THB, TWD, VEF, ZAR} >
\item \emph{ @param } include_non_xbrl character
\item \emph{ @returnType } \link{APIXBRLStatement} \cr

\item status code : 200 | OK

\item return type : APIXBRLStatement
\item response headers :

\tabular{ll}{
}
}

\strong{ FaceStatementsGetStatements } \emph{ Gets the list of statements for one company/period }

\itemize{
\item \emph{ @param } ticker character
\item \emph{ @param } period_type Enum < \link{none, Q, Y, halfYear, Q3CUM, cumulative, ttm, Q_Y_combined} >
\item \emph{ @param } year integer
\item \emph{ @param } stat character
\item \emph{ @returnType } \link{StatementsMetaData} \cr

\item status code : 200 | OK

\item return type : StatementsMetaData
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  FaceStatementsGetStatementExteneral  ####################

library(calcbenchR)
var_company_identifier <- "company_identifier_example" # character | Ticker or CIK
var_statement_type <- "statement_type_example" # character | income|balance|cash|change-in-equity|comprehensive-income (Optional)
var_period_type <- "period_type_example" # character | annual|quarterly|combined|cumulative (Optional)
var_all_periods <- "all_periods_example" # character | include all history (Optional)
var_descending_dates <- "descending_dates_example" # character | most recent period first (Optional)
var_end_date <- "end_date_example" # character | Get statement before this date (Optional)
var_accession_id <- 56 # integer | Internal Calcbench (Optional)
var_point_in_time <- "point_in_time_example" # character | As originally reported, without revisions, defaults to false (Optional)
var_network_id <- 56 # integer | Interal Calcbench (Optional)
var_for_display <- "for_display_example" # character |  (Optional)
var_currency <- "currency_example" # character |  (Optional)
var_include_non_xbrl <- "include_non_xbrl_example" # character | Include data from earnings releases (Optional)

#As-reported face statments, income, balance, statement of cash flows, etc...
api_instance <- FaceStatementsApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$FaceStatementsGetStatementExteneral(var_company_identifier, statement_type = var_statement_type, period_type = var_period_type, all_periods = var_all_periods, descending_dates = var_descending_dates, end_date = var_end_date, accession_id = var_accession_id, point_in_time = var_point_in_time, network_id = var_network_id, for_display = var_for_display, currency = var_currency, include_non_xbrl = var_include_non_xbrldata_file = "result.txt")
result <- api_instance$FaceStatementsGetStatementExteneral(var_company_identifier, statement_type = var_statement_type, period_type = var_period_type, all_periods = var_all_periods, descending_dates = var_descending_dates, end_date = var_end_date, accession_id = var_accession_id, point_in_time = var_point_in_time, network_id = var_network_id, for_display = var_for_display, currency = var_currency, include_non_xbrl = var_include_non_xbrl)
dput(result)


####################  FaceStatementsGetStatements  ####################

library(calcbenchR)
var_ticker <- "ticker_example" # character | 
var_period_type <- "period_type_example" # character |  (Optional)
var_year <- 56 # integer |  (Optional)
var_stat <- "stat_example" # character |  (Optional)

#Gets the list of statements for one company/period
api_instance <- FaceStatementsApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$FaceStatementsGetStatements(var_ticker, period_type = var_period_type, year = var_year, stat = var_statdata_file = "result.txt")
result <- api_instance$FaceStatementsGetStatements(var_ticker, period_type = var_period_type, year = var_year, stat = var_stat)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FaceStatementsApi-new}{\code{FaceStatementsApi$new()}}
\item \href{#method-FaceStatementsApi-FaceStatementsGetStatementExteneral}{\code{FaceStatementsApi$FaceStatementsGetStatementExteneral()}}
\item \href{#method-FaceStatementsApi-FaceStatementsGetStatementExteneralWithHttpInfo}{\code{FaceStatementsApi$FaceStatementsGetStatementExteneralWithHttpInfo()}}
\item \href{#method-FaceStatementsApi-FaceStatementsGetStatements}{\code{FaceStatementsApi$FaceStatementsGetStatements()}}
\item \href{#method-FaceStatementsApi-FaceStatementsGetStatementsWithHttpInfo}{\code{FaceStatementsApi$FaceStatementsGetStatementsWithHttpInfo()}}
\item \href{#method-FaceStatementsApi-clone}{\code{FaceStatementsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FaceStatementsApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-FaceStatementsGetStatementExteneral"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-FaceStatementsGetStatementExteneral}{}}}
\subsection{Method \code{FaceStatementsGetStatementExteneral()}}{
As-reported face statments, income, balance, statement of cash flows, etc...
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$FaceStatementsGetStatementExteneral(
  company_identifier,
  statement_type = NULL,
  period_type = NULL,
  all_periods = NULL,
  descending_dates = NULL,
  end_date = NULL,
  accession_id = NULL,
  point_in_time = NULL,
  network_id = NULL,
  for_display = NULL,
  currency = NULL,
  include_non_xbrl = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{company_identifier}}{Ticker or CIK}

\item{\code{statement_type}}{(optional) income|balance|cash|change-in-equity|comprehensive-income}

\item{\code{period_type}}{(optional) annual|quarterly|combined|cumulative}

\item{\code{all_periods}}{(optional) include all history}

\item{\code{descending_dates}}{(optional) most recent period first}

\item{\code{end_date}}{(optional) Get statement before this date}

\item{\code{accession_id}}{(optional) Internal Calcbench}

\item{\code{point_in_time}}{(optional) As originally reported, without revisions, defaults to false}

\item{\code{network_id}}{(optional) Interal Calcbench}

\item{\code{for_display}}{(optional) No description}

\item{\code{currency}}{(optional) No description}

\item{\code{include_non_xbrl}}{(optional) Include data from earnings releases}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
APIXBRLStatement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-FaceStatementsGetStatementExteneralWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-FaceStatementsGetStatementExteneralWithHttpInfo}{}}}
\subsection{Method \code{FaceStatementsGetStatementExteneralWithHttpInfo()}}{
As-reported face statments, income, balance, statement of cash flows, etc...
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$FaceStatementsGetStatementExteneralWithHttpInfo(
  company_identifier,
  statement_type = NULL,
  period_type = NULL,
  all_periods = NULL,
  descending_dates = NULL,
  end_date = NULL,
  accession_id = NULL,
  point_in_time = NULL,
  network_id = NULL,
  for_display = NULL,
  currency = NULL,
  include_non_xbrl = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{company_identifier}}{Ticker or CIK}

\item{\code{statement_type}}{(optional) income|balance|cash|change-in-equity|comprehensive-income}

\item{\code{period_type}}{(optional) annual|quarterly|combined|cumulative}

\item{\code{all_periods}}{(optional) include all history}

\item{\code{descending_dates}}{(optional) most recent period first}

\item{\code{end_date}}{(optional) Get statement before this date}

\item{\code{accession_id}}{(optional) Internal Calcbench}

\item{\code{point_in_time}}{(optional) As originally reported, without revisions, defaults to false}

\item{\code{network_id}}{(optional) Interal Calcbench}

\item{\code{for_display}}{(optional) No description}

\item{\code{currency}}{(optional) No description}

\item{\code{include_non_xbrl}}{(optional) Include data from earnings releases}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (APIXBRLStatement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-FaceStatementsGetStatements"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-FaceStatementsGetStatements}{}}}
\subsection{Method \code{FaceStatementsGetStatements()}}{
Gets the list of statements for one company/period
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$FaceStatementsGetStatements(
  ticker,
  period_type = NULL,
  year = NULL,
  stat = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ticker}}{}

\item{\code{period_type}}{(optional) No description}

\item{\code{year}}{(optional) No description}

\item{\code{stat}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
StatementsMetaData
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-FaceStatementsGetStatementsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-FaceStatementsGetStatementsWithHttpInfo}{}}}
\subsection{Method \code{FaceStatementsGetStatementsWithHttpInfo()}}{
Gets the list of statements for one company/period
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$FaceStatementsGetStatementsWithHttpInfo(
  ticker,
  period_type = NULL,
  year = NULL,
  stat = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ticker}}{}

\item{\code{period_type}}{(optional) No description}

\item{\code{year}}{(optional) No description}

\item{\code{stat}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (StatementsMetaData) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementsApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementsApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
