% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dimensional_data_point.R
\docType{class}
\name{DimensionalDataPoint}
\alias{DimensionalDataPoint}
\title{DimensionalDataPoint}
\format{
An \code{R6Class} generator object
}
\description{
Returned by calls to the dimensional(segment) API end-point

DimensionalDataPoint Class
}
\details{
Create a new DimensionalDataPoint
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{is_subtotal}}{character \link{optional}}

\item{\code{dimensions}}{Keys are the axis names, values are the member names. named list(character) \link{optional}}

\item{\code{container}}{character \link{optional}}

\item{\code{standardized_id}}{integer \link{optional}}

\item{\code{metric}}{character \link{optional}}

\item{\code{value}}{object \link{optional}}

\item{\code{calendar_year}}{integer \link{optional}}

\item{\code{calendar_period}}{integer \link{optional}}

\item{\code{fiscal_year}}{integer \link{optional}}

\item{\code{fiscal_period}}{integer \link{optional}}

\item{\code{trace_facts}}{list(\link{TraceData}) \link{optional}}

\item{\code{ticker}}{character \link{optional}}

\item{\code{CIK}}{character \link{optional}}

\item{\code{calcbench_entity_id}}{integer \link{optional}}

\item{\code{filing_type}}{character \link{optional}}

\item{\code{preliminary}}{character \link{optional}}

\item{\code{filing_accession_number}}{character \link{optional}}

\item{\code{trace_url}}{character \link{optional}}

\item{\code{revision_number}}{integer \link{optional}}

\item{\code{XBRL}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DimensionalDataPoint-new}{\code{DimensionalDataPoint$new()}}
\item \href{#method-DimensionalDataPoint-toJSON}{\code{DimensionalDataPoint$toJSON()}}
\item \href{#method-DimensionalDataPoint-fromJSON}{\code{DimensionalDataPoint$fromJSON()}}
\item \href{#method-DimensionalDataPoint-toJSONString}{\code{DimensionalDataPoint$toJSONString()}}
\item \href{#method-DimensionalDataPoint-fromJSONString}{\code{DimensionalDataPoint$fromJSONString()}}
\item \href{#method-DimensionalDataPoint-validateJSON}{\code{DimensionalDataPoint$validateJSON()}}
\item \href{#method-DimensionalDataPoint-toString}{\code{DimensionalDataPoint$toString()}}
\item \href{#method-DimensionalDataPoint-isValid}{\code{DimensionalDataPoint$isValid()}}
\item \href{#method-DimensionalDataPoint-getInvalidFields}{\code{DimensionalDataPoint$getInvalidFields()}}
\item \href{#method-DimensionalDataPoint-print}{\code{DimensionalDataPoint$print()}}
\item \href{#method-DimensionalDataPoint-clone}{\code{DimensionalDataPoint$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-new"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DimensionalDataPoint class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$new(
  is_subtotal = NULL,
  dimensions = NULL,
  container = NULL,
  standardized_id = NULL,
  metric = NULL,
  value = NULL,
  calendar_year = NULL,
  calendar_period = NULL,
  fiscal_year = NULL,
  fiscal_period = NULL,
  trace_facts = NULL,
  ticker = NULL,
  CIK = NULL,
  calcbench_entity_id = NULL,
  filing_type = NULL,
  preliminary = NULL,
  filing_accession_number = NULL,
  trace_url = NULL,
  revision_number = NULL,
  XBRL = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{is_subtotal}}{is_subtotal}

\item{\code{dimensions}}{Keys are the axis names, values are the member names.}

\item{\code{container}}{container}

\item{\code{standardized_id}}{standardized_id}

\item{\code{metric}}{metric}

\item{\code{value}}{value}

\item{\code{calendar_year}}{calendar_year}

\item{\code{calendar_period}}{calendar_period}

\item{\code{fiscal_year}}{fiscal_year}

\item{\code{fiscal_period}}{fiscal_period}

\item{\code{trace_facts}}{trace_facts}

\item{\code{ticker}}{ticker}

\item{\code{CIK}}{CIK}

\item{\code{calcbench_entity_id}}{calcbench_entity_id}

\item{\code{filing_type}}{filing_type}

\item{\code{preliminary}}{preliminary}

\item{\code{filing_accession_number}}{filing_accession_number}

\item{\code{trace_url}}{trace_url}

\item{\code{revision_number}}{revision_number}

\item{\code{XBRL}}{XBRL}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DimensionalDataPoint in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of DimensionalDataPoint
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DimensionalDataPoint
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DimensionalDataPoint in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of DimensionalDataPoint
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DimensionalDataPoint
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to DimensionalDataPoint and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-toString"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of DimensionalDataPoint
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-print"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DimensionalDataPoint-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DimensionalDataPoint-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DimensionalDataPoint$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
