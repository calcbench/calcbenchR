% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apixbrl_statement.R
\docType{class}
\name{APIXBRLStatement}
\alias{APIXBRLStatement}
\title{APIXBRLStatement}
\format{
An \code{R6Class} generator object
}
\description{
Income statement, balance sheet, statement of cash flows, etc.

APIXBRLStatement Class
}
\details{
Create a new APIXBRLStatement
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{entity_name}}{character \link{optional}}

\item{\code{name}}{character \link{optional}}

\item{\code{period_type}}{character \link{optional}}

\item{\code{id_ifrs}}{character \link{optional}}

\item{\code{columns}}{list(\link{FaceStatementColumn}) \link{optional}}

\item{\code{line_items}}{list(object) \link{optional}}

\item{\code{unique_id}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-APIXBRLStatement-new}{\code{APIXBRLStatement$new()}}
\item \href{#method-APIXBRLStatement-toJSON}{\code{APIXBRLStatement$toJSON()}}
\item \href{#method-APIXBRLStatement-fromJSON}{\code{APIXBRLStatement$fromJSON()}}
\item \href{#method-APIXBRLStatement-toJSONString}{\code{APIXBRLStatement$toJSONString()}}
\item \href{#method-APIXBRLStatement-fromJSONString}{\code{APIXBRLStatement$fromJSONString()}}
\item \href{#method-APIXBRLStatement-validateJSON}{\code{APIXBRLStatement$validateJSON()}}
\item \href{#method-APIXBRLStatement-toString}{\code{APIXBRLStatement$toString()}}
\item \href{#method-APIXBRLStatement-isValid}{\code{APIXBRLStatement$isValid()}}
\item \href{#method-APIXBRLStatement-getInvalidFields}{\code{APIXBRLStatement$getInvalidFields()}}
\item \href{#method-APIXBRLStatement-print}{\code{APIXBRLStatement$print()}}
\item \href{#method-APIXBRLStatement-clone}{\code{APIXBRLStatement$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-new"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new APIXBRLStatement class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$new(
  entity_name = NULL,
  name = NULL,
  period_type = NULL,
  id_ifrs = NULL,
  columns = NULL,
  line_items = NULL,
  unique_id = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_name}}{entity_name}

\item{\code{name}}{name}

\item{\code{period_type}}{period_type}

\item{\code{id_ifrs}}{id_ifrs}

\item{\code{columns}}{columns}

\item{\code{line_items}}{line_items}

\item{\code{unique_id}}{unique_id}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
APIXBRLStatement in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of APIXBRLStatement
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of APIXBRLStatement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
APIXBRLStatement in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of APIXBRLStatement
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of APIXBRLStatement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to APIXBRLStatement and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-toString"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of APIXBRLStatement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-print"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-APIXBRLStatement-clone"></a>}}
\if{latex}{\out{\hypertarget{method-APIXBRLStatement-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIXBRLStatement$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
