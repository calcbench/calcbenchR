% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/non_xbrl_fact.R
\docType{class}
\name{NonXBRLFact}
\alias{NonXBRLFact}
\title{NonXBRLFact}
\format{
An \code{R6Class} generator object
}
\description{
NonXBRLFact Class

NonXBRLFact Class
}
\details{
Create a new NonXBRLFact
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{companyID}}{integer \link{optional}}

\item{\code{CIK}}{character \link{optional}}

\item{\code{UOM}}{character \link{optional}}

\item{\code{Value}}{numeric \link{optional}}

\item{\code{XBRLfilingID}}{integer \link{optional}}

\item{\code{column_label}}{character \link{optional}}

\item{\code{document}}{character \link{optional}}

\item{\code{entity_name}}{character \link{optional}}

\item{\code{extract_tag}}{character \link{optional}}

\item{\code{fact_id}}{integer \link{optional}}

\item{\code{filingID}}{integer \link{optional}}

\item{\code{filing_date}}{character \link{optional}}

\item{\code{filing_end_date}}{character \link{optional}}

\item{\code{filing_period}}{integer \link{optional}}

\item{\code{filing_year}}{integer \link{optional}}

\item{\code{fiscal_period}}{integer \link{optional}}

\item{\code{fiscal_year}}{integer \link{optional}}

\item{\code{is_guidance}}{character \link{optional}}

\item{\code{is_non_gaap}}{character \link{optional}}

\item{\code{label}}{character \link{optional}}

\item{\code{metric}}{character \link{optional}}

\item{\code{metric_id}}{qname_id_min, a unique identifier for XBRL tags.  Set for rows when Calcbench thinks this data corresponds to an XBRL tag. integer \link{optional}}

\item{\code{range_high}}{character \link{optional}}

\item{\code{range_low}}{character \link{optional}}

\item{\code{sec_filing_URL}}{character \link{optional}}

\item{\code{sec_html_url}}{character \link{optional}}

\item{\code{special_fact_type}}{character \link{optional}}

\item{\code{statement_type}}{character \link{optional}}

\item{\code{tabular_item}}{character \link{optional}}

\item{\code{ticker}}{character \link{optional}}

\item{\code{filing_type}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-NonXBRLFact-new}{\code{NonXBRLFact$new()}}
\item \href{#method-NonXBRLFact-toJSON}{\code{NonXBRLFact$toJSON()}}
\item \href{#method-NonXBRLFact-fromJSON}{\code{NonXBRLFact$fromJSON()}}
\item \href{#method-NonXBRLFact-toJSONString}{\code{NonXBRLFact$toJSONString()}}
\item \href{#method-NonXBRLFact-fromJSONString}{\code{NonXBRLFact$fromJSONString()}}
\item \href{#method-NonXBRLFact-validateJSON}{\code{NonXBRLFact$validateJSON()}}
\item \href{#method-NonXBRLFact-toString}{\code{NonXBRLFact$toString()}}
\item \href{#method-NonXBRLFact-isValid}{\code{NonXBRLFact$isValid()}}
\item \href{#method-NonXBRLFact-getInvalidFields}{\code{NonXBRLFact$getInvalidFields()}}
\item \href{#method-NonXBRLFact-print}{\code{NonXBRLFact$print()}}
\item \href{#method-NonXBRLFact-clone}{\code{NonXBRLFact$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-new"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new NonXBRLFact class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$new(
  companyID = NULL,
  CIK = NULL,
  UOM = NULL,
  Value = NULL,
  XBRLfilingID = NULL,
  column_label = NULL,
  document = NULL,
  entity_name = NULL,
  extract_tag = NULL,
  fact_id = NULL,
  filingID = NULL,
  filing_date = NULL,
  filing_end_date = NULL,
  filing_period = NULL,
  filing_year = NULL,
  fiscal_period = NULL,
  fiscal_year = NULL,
  is_guidance = NULL,
  is_non_gaap = NULL,
  label = NULL,
  metric = NULL,
  metric_id = NULL,
  range_high = NULL,
  range_low = NULL,
  sec_filing_URL = NULL,
  sec_html_url = NULL,
  special_fact_type = NULL,
  statement_type = NULL,
  tabular_item = NULL,
  ticker = NULL,
  filing_type = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{companyID}}{companyID}

\item{\code{CIK}}{CIK}

\item{\code{UOM}}{UOM}

\item{\code{Value}}{Value}

\item{\code{XBRLfilingID}}{XBRLfilingID}

\item{\code{column_label}}{column_label}

\item{\code{document}}{document}

\item{\code{entity_name}}{entity_name}

\item{\code{extract_tag}}{extract_tag}

\item{\code{fact_id}}{fact_id}

\item{\code{filingID}}{filingID}

\item{\code{filing_date}}{filing_date}

\item{\code{filing_end_date}}{filing_end_date}

\item{\code{filing_period}}{filing_period}

\item{\code{filing_year}}{filing_year}

\item{\code{fiscal_period}}{fiscal_period}

\item{\code{fiscal_year}}{fiscal_year}

\item{\code{is_guidance}}{is_guidance}

\item{\code{is_non_gaap}}{is_non_gaap}

\item{\code{label}}{label}

\item{\code{metric}}{metric}

\item{\code{metric_id}}{qname_id_min, a unique identifier for XBRL tags.  Set for rows when Calcbench thinks this data corresponds to an XBRL tag.}

\item{\code{range_high}}{range_high}

\item{\code{range_low}}{range_low}

\item{\code{sec_filing_URL}}{sec_filing_URL}

\item{\code{sec_html_url}}{sec_html_url}

\item{\code{special_fact_type}}{special_fact_type}

\item{\code{statement_type}}{statement_type}

\item{\code{tabular_item}}{tabular_item}

\item{\code{ticker}}{ticker}

\item{\code{filing_type}}{filing_type}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NonXBRLFact in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of NonXBRLFact
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of NonXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NonXBRLFact in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of NonXBRLFact
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of NonXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to NonXBRLFact and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-toString"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of NonXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-print"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-NonXBRLFact-clone"></a>}}
\if{latex}{\out{\hypertarget{method-NonXBRLFact-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NonXBRLFact$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
