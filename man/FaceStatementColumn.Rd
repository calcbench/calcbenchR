% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/face_statement_column.R
\docType{class}
\name{FaceStatementColumn}
\alias{FaceStatementColumn}
\title{FaceStatementColumn}
\format{
An \code{R6Class} generator object
}
\description{
FaceStatementColumn Class

FaceStatementColumn Class
}
\details{
Create a new FaceStatementColumn
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{PRELIMINARYDATAID}}{integer \link{optional}}

\item{\code{fiscal_period}}{Fiscal period-Fiscal Year character \link{optional}}

\item{\code{period_start}}{character \link{optional}}

\item{\code{period_end}}{character \link{optional}}

\item{\code{date_range}}{character \link{optional}}

\item{\code{instant}}{character \link{optional}}

\item{\code{compareType}}{character \link{optional}}

\item{\code{preliminary}}{character \link{optional}}

\item{\code{calculated}}{character \link{optional}}

\item{\code{sec_links}}{list(object) \link{optional}}

\item{\code{is_guidance_column}}{character \link{optional}}

\item{\code{fiscal_period_type}}{character \link{optional}}

\item{\code{fiscal_period_year}}{integer \link{optional}}

\item{\code{fiscal_period_period}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FaceStatementColumn-new}{\code{FaceStatementColumn$new()}}
\item \href{#method-FaceStatementColumn-toJSON}{\code{FaceStatementColumn$toJSON()}}
\item \href{#method-FaceStatementColumn-fromJSON}{\code{FaceStatementColumn$fromJSON()}}
\item \href{#method-FaceStatementColumn-toJSONString}{\code{FaceStatementColumn$toJSONString()}}
\item \href{#method-FaceStatementColumn-fromJSONString}{\code{FaceStatementColumn$fromJSONString()}}
\item \href{#method-FaceStatementColumn-validateJSON}{\code{FaceStatementColumn$validateJSON()}}
\item \href{#method-FaceStatementColumn-toString}{\code{FaceStatementColumn$toString()}}
\item \href{#method-FaceStatementColumn-isValid}{\code{FaceStatementColumn$isValid()}}
\item \href{#method-FaceStatementColumn-getInvalidFields}{\code{FaceStatementColumn$getInvalidFields()}}
\item \href{#method-FaceStatementColumn-print}{\code{FaceStatementColumn$print()}}
\item \href{#method-FaceStatementColumn-clone}{\code{FaceStatementColumn$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-new"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FaceStatementColumn class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$new(
  PRELIMINARYDATAID = NULL,
  fiscal_period = NULL,
  period_start = NULL,
  period_end = NULL,
  date_range = NULL,
  instant = NULL,
  compareType = NULL,
  preliminary = NULL,
  calculated = NULL,
  sec_links = NULL,
  is_guidance_column = NULL,
  fiscal_period_type = NULL,
  fiscal_period_year = NULL,
  fiscal_period_period = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{PRELIMINARYDATAID}}{PRELIMINARYDATAID}

\item{\code{fiscal_period}}{Fiscal period-Fiscal Year}

\item{\code{period_start}}{period_start}

\item{\code{period_end}}{period_end}

\item{\code{date_range}}{date_range}

\item{\code{instant}}{instant}

\item{\code{compareType}}{compareType}

\item{\code{preliminary}}{preliminary}

\item{\code{calculated}}{calculated}

\item{\code{sec_links}}{sec_links}

\item{\code{is_guidance_column}}{is_guidance_column}

\item{\code{fiscal_period_type}}{fiscal_period_type}

\item{\code{fiscal_period_year}}{fiscal_period_year}

\item{\code{fiscal_period_period}}{fiscal_period_period}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FaceStatementColumn in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of FaceStatementColumn
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FaceStatementColumn
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FaceStatementColumn in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of FaceStatementColumn
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FaceStatementColumn
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to FaceStatementColumn and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-toString"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of FaceStatementColumn
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-print"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FaceStatementColumn-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FaceStatementColumn-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FaceStatementColumn$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
