% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raw_xbrl_fact.R
\docType{class}
\name{RawXBRLFact}
\alias{RawXBRLFact}
\title{RawXBRLFact}
\format{
An \code{R6Class} generator object
}
\description{
RawXBRLFact Class

RawXBRLFact Class
}
\details{
Create a new RawXBRLFact
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{ticker}}{character \link{optional}}

\item{\code{CIK}}{character \link{optional}}

\item{\code{entity_name}}{character \link{optional}}

\item{\code{filingID}}{integer \link{optional}}

\item{\code{sec_filing_URL}}{character \link{optional}}

\item{\code{document}}{10-K, 10-Q etc. character \link{optional}}

\item{\code{XBRLtag}}{character \link{optional}}

\item{\code{Value}}{numeric \link{optional}}

\item{\code{fiscal_year}}{integer \link{optional}}

\item{\code{fiscal_period}}{character \link{optional}}

\item{\code{calendar_year}}{integer \link{optional}}

\item{\code{calendar_period}}{character \link{optional}}

\item{\code{period_start}}{character \link{optional}}

\item{\code{period_end}}{character \link{optional}}

\item{\code{period_instant}}{character \link{optional}}

\item{\code{tagID}}{integer \link{optional}}

\item{\code{factVersion}}{integer \link{optional}}

\item{\code{filing_date}}{character \link{optional}}

\item{\code{SEC_accession_number}}{character \link{optional}}

\item{\code{filing_end_date}}{character \link{optional}}

\item{\code{period_index}}{integer \link{optional}}

\item{\code{unit_of_measure}}{character \link{optional}}

\item{\code{format_type}}{character \link{optional}}

\item{\code{fact_id}}{integer \link{optional}}

\item{\code{uncorrectedValue}}{numeric \link{optional}}

\item{\code{dimension_string}}{character \link{optional}}

\item{\code{label}}{character \link{optional}}

\item{\code{description}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RawXBRLFact-new}{\code{RawXBRLFact$new()}}
\item \href{#method-RawXBRLFact-toJSON}{\code{RawXBRLFact$toJSON()}}
\item \href{#method-RawXBRLFact-fromJSON}{\code{RawXBRLFact$fromJSON()}}
\item \href{#method-RawXBRLFact-toJSONString}{\code{RawXBRLFact$toJSONString()}}
\item \href{#method-RawXBRLFact-fromJSONString}{\code{RawXBRLFact$fromJSONString()}}
\item \href{#method-RawXBRLFact-validateJSON}{\code{RawXBRLFact$validateJSON()}}
\item \href{#method-RawXBRLFact-toString}{\code{RawXBRLFact$toString()}}
\item \href{#method-RawXBRLFact-isValid}{\code{RawXBRLFact$isValid()}}
\item \href{#method-RawXBRLFact-getInvalidFields}{\code{RawXBRLFact$getInvalidFields()}}
\item \href{#method-RawXBRLFact-print}{\code{RawXBRLFact$print()}}
\item \href{#method-RawXBRLFact-clone}{\code{RawXBRLFact$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-new"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RawXBRLFact class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$new(
  ticker = NULL,
  CIK = NULL,
  entity_name = NULL,
  filingID = NULL,
  sec_filing_URL = NULL,
  document = NULL,
  XBRLtag = NULL,
  Value = NULL,
  fiscal_year = NULL,
  fiscal_period = NULL,
  calendar_year = NULL,
  calendar_period = NULL,
  period_start = NULL,
  period_end = NULL,
  period_instant = NULL,
  tagID = NULL,
  factVersion = NULL,
  filing_date = NULL,
  SEC_accession_number = NULL,
  filing_end_date = NULL,
  period_index = NULL,
  unit_of_measure = NULL,
  format_type = NULL,
  fact_id = NULL,
  uncorrectedValue = NULL,
  dimension_string = NULL,
  label = NULL,
  description = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ticker}}{ticker}

\item{\code{CIK}}{CIK}

\item{\code{entity_name}}{entity_name}

\item{\code{filingID}}{filingID}

\item{\code{sec_filing_URL}}{sec_filing_URL}

\item{\code{document}}{10-K, 10-Q etc.}

\item{\code{XBRLtag}}{XBRLtag}

\item{\code{Value}}{Value}

\item{\code{fiscal_year}}{fiscal_year}

\item{\code{fiscal_period}}{fiscal_period}

\item{\code{calendar_year}}{calendar_year}

\item{\code{calendar_period}}{calendar_period}

\item{\code{period_start}}{period_start}

\item{\code{period_end}}{period_end}

\item{\code{period_instant}}{period_instant}

\item{\code{tagID}}{tagID}

\item{\code{factVersion}}{factVersion}

\item{\code{filing_date}}{filing_date}

\item{\code{SEC_accession_number}}{SEC_accession_number}

\item{\code{filing_end_date}}{filing_end_date}

\item{\code{period_index}}{period_index}

\item{\code{unit_of_measure}}{unit_of_measure}

\item{\code{format_type}}{format_type}

\item{\code{fact_id}}{fact_id}

\item{\code{uncorrectedValue}}{uncorrectedValue}

\item{\code{dimension_string}}{dimension_string}

\item{\code{label}}{label}

\item{\code{description}}{description}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RawXBRLFact in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of RawXBRLFact
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RawXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RawXBRLFact in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of RawXBRLFact
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RawXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to RawXBRLFact and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-toString"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of RawXBRLFact
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-print"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawXBRLFact-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RawXBRLFact-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawXBRLFact$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
