% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xbr_lcompany.R
\docType{class}
\name{XBRLcompany}
\alias{XBRLcompany}
\title{XBRLcompany}
\format{
An \code{R6Class} generator object
}
\description{
XBRLcompany Class

XBRLcompany Class
}
\details{
Create a new XBRLcompany
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{entity_name}}{character \link{optional}}

\item{\code{entity_id}}{integer \link{optional}}

\item{\code{ticker}}{character \link{optional}}

\item{\code{entity_code}}{character \link{optional}}

\item{\code{sic_code}}{integer \link{optional}}

\item{\code{naics}}{integer \link{optional}}

\item{\code{naics2}}{integer \link{optional}}

\item{\code{assets}}{numeric \link{optional}}

\item{\code{revenue}}{numeric \link{optional}}

\item{\code{state}}{character \link{optional}}

\item{\code{country}}{character \link{optional}}

\item{\code{zip}}{character \link{optional}}

\item{\code{EntityIncorporationStateCountryCode}}{character \link{optional}}

\item{\code{EntityTaxIdentificationNumber}}{character \link{optional}}

\item{\code{SecurityExchangeName}}{character \link{optional}}

\item{\code{FYEndDateChange}}{integer \link{optional}}

\item{\code{status}}{character \link{optional}}

\item{\code{Street1}}{character \link{optional}}

\item{\code{Street2}}{character \link{optional}}

\item{\code{cik_code}}{object \link{optional}}

\item{\code{SICCategory}}{character \link{optional}}

\item{\code{naics_code}}{object \link{optional}}

\item{\code{city}}{character \link{optional}}

\item{\code{street_address}}{character \link{optional}}

\item{\code{naics_minor_group_title}}{character \link{optional}}

\item{\code{SICGroupMinorGroupTitle}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-XBRLcompany-new}{\code{XBRLcompany$new()}}
\item \href{#method-XBRLcompany-toJSON}{\code{XBRLcompany$toJSON()}}
\item \href{#method-XBRLcompany-fromJSON}{\code{XBRLcompany$fromJSON()}}
\item \href{#method-XBRLcompany-toJSONString}{\code{XBRLcompany$toJSONString()}}
\item \href{#method-XBRLcompany-fromJSONString}{\code{XBRLcompany$fromJSONString()}}
\item \href{#method-XBRLcompany-validateJSON}{\code{XBRLcompany$validateJSON()}}
\item \href{#method-XBRLcompany-toString}{\code{XBRLcompany$toString()}}
\item \href{#method-XBRLcompany-isValid}{\code{XBRLcompany$isValid()}}
\item \href{#method-XBRLcompany-getInvalidFields}{\code{XBRLcompany$getInvalidFields()}}
\item \href{#method-XBRLcompany-print}{\code{XBRLcompany$print()}}
\item \href{#method-XBRLcompany-clone}{\code{XBRLcompany$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-new"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new XBRLcompany class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$new(
  entity_name = NULL,
  entity_id = NULL,
  ticker = NULL,
  entity_code = NULL,
  sic_code = NULL,
  naics = NULL,
  naics2 = NULL,
  assets = NULL,
  revenue = NULL,
  state = NULL,
  country = NULL,
  zip = NULL,
  EntityIncorporationStateCountryCode = NULL,
  EntityTaxIdentificationNumber = NULL,
  SecurityExchangeName = NULL,
  FYEndDateChange = NULL,
  status = NULL,
  Street1 = NULL,
  Street2 = NULL,
  cik_code = NULL,
  SICCategory = NULL,
  naics_code = NULL,
  city = NULL,
  street_address = NULL,
  naics_minor_group_title = NULL,
  SICGroupMinorGroupTitle = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_name}}{entity_name}

\item{\code{entity_id}}{entity_id}

\item{\code{ticker}}{ticker}

\item{\code{entity_code}}{entity_code}

\item{\code{sic_code}}{sic_code}

\item{\code{naics}}{naics}

\item{\code{naics2}}{naics2}

\item{\code{assets}}{assets}

\item{\code{revenue}}{revenue}

\item{\code{state}}{state}

\item{\code{country}}{country}

\item{\code{zip}}{zip}

\item{\code{EntityIncorporationStateCountryCode}}{EntityIncorporationStateCountryCode}

\item{\code{EntityTaxIdentificationNumber}}{EntityTaxIdentificationNumber}

\item{\code{SecurityExchangeName}}{SecurityExchangeName}

\item{\code{FYEndDateChange}}{FYEndDateChange}

\item{\code{status}}{status}

\item{\code{Street1}}{Street1}

\item{\code{Street2}}{Street2}

\item{\code{cik_code}}{cik_code}

\item{\code{SICCategory}}{SICCategory}

\item{\code{naics_code}}{naics_code}

\item{\code{city}}{city}

\item{\code{street_address}}{street_address}

\item{\code{naics_minor_group_title}}{naics_minor_group_title}

\item{\code{SICGroupMinorGroupTitle}}{SICGroupMinorGroupTitle}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
XBRLcompany in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of XBRLcompany
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of XBRLcompany
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
XBRLcompany in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of XBRLcompany
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of XBRLcompany
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to XBRLcompany and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-toString"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of XBRLcompany
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-print"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-XBRLcompany-clone"></a>}}
\if{latex}{\out{\hypertarget{method-XBRLcompany-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{XBRLcompany$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
