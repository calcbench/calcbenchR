% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raw_data_api.R
\docType{class}
\name{RawDataApi}
\alias{RawDataApi}
\title{RawData operations}
\format{
An \code{R6Class} generator object
}
\description{
RawDataApi
}
\details{
Calcbench API

No description provided (generated by Openapi Generator https://github.com/calcbenchRtools/calcbenchR-generator)

The version of the OpenAPI document: v1
Generated by: https://calcbenchR-generator.tech
}
\section{Methods}{

\describe{
\strong{ RawDataRaw13FData } \emph{ 13F data }
The data behind the <a href=\"/xbrl\">13F data page.\if{html}{\out{</a>}}

\itemize{
\item \emph{ @param } params \link{Raw13FDataSearchParams}

\item status code : 200 | OK

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ RawDataRawNonXBRLData } \emph{ Non-XBRL Data As-Reported }
The data behind the <a href=\"/nonXBRLRawData\">non-XBRL raw data\if{html}{\out{</a>}} page.

\itemize{
\item \emph{ @param } params \link{RawNonXBRLDataSearchParams}
\item \emph{ @returnType } list( \link{NonXBRLFact} ) \cr

\item status code : 200 | OK

\item return type : array\link{NonXBRLFact}
\item response headers :

\tabular{ll}{
}
}

\strong{ RawDataRawXBRLData } \emph{ XBRL data As-Reported }
The data behind the <a href=\"/xbrl\">raw data page.\if{html}{\out{</a>}}

\itemize{
\item \emph{ @param } params \link{RawXBRLDataSearchParams}
\item \emph{ @returnType } list( \link{RawXBRLFact} ) \cr

\item status code : 200 | OK

\item return type : array\link{RawXBRLFact}
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  RawDataRaw13FData  ####################

library(calcbenchR)
var_params <- Raw13FDataSearchParams$new(CompaniesParameters$new(c("companyIdentifiers_example"), "entireUniverse_example", c(123)), Raw13FQueryParams$new(c(Form13FQueryPiece$new("fiscalYear", 123, "value_example")), "QueryID_example")) # Raw13FDataSearchParams | 

#13F data
api_instance <- RawDataApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$RawDataRaw13FData(var_paramsdata_file = "result.txt")
result <- api_instance$RawDataRaw13FData(var_params)
dput(result)


####################  RawDataRawNonXBRLData  ####################

library(calcbenchR)
var_params <- RawNonXBRLDataSearchParams$new(CompaniesParameters$new(c("companyIdentifiers_example"), "entireUniverse_example", c(123)), RawNonXBRLQueryParams$new(c(NONxbrlQueryPiece$new("numericalValue", "equals", "value_example")), "QueryID_example")) # RawNonXBRLDataSearchParams | 

#Non-XBRL Data As-Reported
api_instance <- RawDataApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$RawDataRawNonXBRLData(var_paramsdata_file = "result.txt")
result <- api_instance$RawDataRawNonXBRLData(var_params)
dput(result)


####################  RawDataRawXBRLData  ####################

library(calcbenchR)
var_params <- RawXBRLDataSearchParams$new(RawXBRLQueryParams$new(c(XbrlQueryPiece$new("numericalValue", "equals", "value_example")), "QueryID_example"), CompaniesParameters$new(c("companyIdentifiers_example"), "entireUniverse_example", c(123))) # RawXBRLDataSearchParams | 

#XBRL data As-Reported
api_instance <- RawDataApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$RawDataRawXBRLData(var_paramsdata_file = "result.txt")
result <- api_instance$RawDataRawXBRLData(var_params)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RawDataApi-new}{\code{RawDataApi$new()}}
\item \href{#method-RawDataApi-RawDataRaw13FData}{\code{RawDataApi$RawDataRaw13FData()}}
\item \href{#method-RawDataApi-RawDataRaw13FDataWithHttpInfo}{\code{RawDataApi$RawDataRaw13FDataWithHttpInfo()}}
\item \href{#method-RawDataApi-RawDataRawNonXBRLData}{\code{RawDataApi$RawDataRawNonXBRLData()}}
\item \href{#method-RawDataApi-RawDataRawNonXBRLDataWithHttpInfo}{\code{RawDataApi$RawDataRawNonXBRLDataWithHttpInfo()}}
\item \href{#method-RawDataApi-RawDataRawXBRLData}{\code{RawDataApi$RawDataRawXBRLData()}}
\item \href{#method-RawDataApi-RawDataRawXBRLDataWithHttpInfo}{\code{RawDataApi$RawDataRawXBRLDataWithHttpInfo()}}
\item \href{#method-RawDataApi-clone}{\code{RawDataApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RawDataApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRaw13FData"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRaw13FData}{}}}
\subsection{Method \code{RawDataRaw13FData()}}{
13F data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRaw13FData(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRaw13FDataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRaw13FDataWithHttpInfo}{}}}
\subsection{Method \code{RawDataRaw13FDataWithHttpInfo()}}{
13F data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRaw13FDataWithHttpInfo(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRawNonXBRLData"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRawNonXBRLData}{}}}
\subsection{Method \code{RawDataRawNonXBRLData()}}{
Non-XBRL Data As-Reported
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRawNonXBRLData(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
array\link{NonXBRLFact}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRawNonXBRLDataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRawNonXBRLDataWithHttpInfo}{}}}
\subsection{Method \code{RawDataRawNonXBRLDataWithHttpInfo()}}{
Non-XBRL Data As-Reported
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRawNonXBRLDataWithHttpInfo(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (array\link{NonXBRLFact}) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRawXBRLData"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRawXBRLData}{}}}
\subsection{Method \code{RawDataRawXBRLData()}}{
XBRL data As-Reported
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRawXBRLData(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
array\link{RawXBRLFact}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-RawDataRawXBRLDataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-RawDataRawXBRLDataWithHttpInfo}{}}}
\subsection{Method \code{RawDataRawXBRLDataWithHttpInfo()}}{
XBRL data As-Reported
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$RawDataRawXBRLDataWithHttpInfo(params, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (array\link{RawXBRLFact}) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RawDataApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RawDataApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RawDataApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
