% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date_range.R
\docType{class}
\name{DateRange}
\alias{DateRange}
\title{DateRange}
\format{
An \code{R6Class} generator object
}
\description{
DateRange Class

DateRange Class
}
\details{
Create a new DateRange
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{startDate}}{character \link{optional}}

\item{\code{endDate}}{character \link{optional}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DateRange-new}{\code{DateRange$new()}}
\item \href{#method-DateRange-toJSON}{\code{DateRange$toJSON()}}
\item \href{#method-DateRange-fromJSON}{\code{DateRange$fromJSON()}}
\item \href{#method-DateRange-toJSONString}{\code{DateRange$toJSONString()}}
\item \href{#method-DateRange-fromJSONString}{\code{DateRange$fromJSONString()}}
\item \href{#method-DateRange-validateJSON}{\code{DateRange$validateJSON()}}
\item \href{#method-DateRange-toString}{\code{DateRange$toString()}}
\item \href{#method-DateRange-isValid}{\code{DateRange$isValid()}}
\item \href{#method-DateRange-getInvalidFields}{\code{DateRange$getInvalidFields()}}
\item \href{#method-DateRange-print}{\code{DateRange$print()}}
\item \href{#method-DateRange-clone}{\code{DateRange$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-new"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DateRange class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$new(startDate = NULL, endDate = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{startDate}}{startDate}

\item{\code{endDate}}{endDate}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DateRange in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of DateRange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DateRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DateRange in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of DateRange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DateRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to DateRange and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-toString"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of DateRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-print"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DateRange-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DateRange-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DateRange$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
